// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from snotice.proto

package com.kevin.framework.generate.packet;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.ByteString;
import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;
import com.dyuproject.protostuff.UninitializedMessageException;

public final class ApiResultPacket implements Externalizable, Message<ApiResultPacket>, Schema<ApiResultPacket>
{

    public static Schema<ApiResultPacket> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static ApiResultPacket getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final ApiResultPacket DEFAULT_INSTANCE = new ApiResultPacket();

    
    private Integer requestNumber;
    private Integer errorCode;
    private String errorMessage;
    private ByteString returnValue;

    public ApiResultPacket()
    {
        
    }

    public ApiResultPacket(
        Integer requestNumber,
        Integer errorCode
    )
    {
        this.requestNumber = requestNumber;
        this.errorCode = errorCode;
    }

    // getters and setters

    // requestNumber

    public Integer getRequestNumber()
    {
        return requestNumber;
    }

    public void setRequestNumber(Integer requestNumber)
    {
        this.requestNumber = requestNumber;
    }

    // errorCode

    public Integer getErrorCode()
    {
        return errorCode;
    }

    public void setErrorCode(Integer errorCode)
    {
        this.errorCode = errorCode;
    }

    // errorMessage

    public String getErrorMessage()
    {
        return errorMessage;
    }

    public void setErrorMessage(String errorMessage)
    {
        this.errorMessage = errorMessage;
    }

    // returnValue

    public ByteString getReturnValue()
    {
        return returnValue;
    }

    public void setReturnValue(ByteString returnValue)
    {
        this.returnValue = returnValue;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<ApiResultPacket> cachedSchema()
    {
        return this;
    }

    // schema methods

    public ApiResultPacket newMessage()
    {
        return new ApiResultPacket();
    }

    public Class<ApiResultPacket> typeClass()
    {
        return ApiResultPacket.class;
    }

    public String messageName()
    {
        return ApiResultPacket.class.getSimpleName();
    }

    public String messageFullName()
    {
        return ApiResultPacket.class.getName();
    }

    public boolean isInitialized(ApiResultPacket message)
    {
        return 
            message.requestNumber != null 
            && message.errorCode != null;
    }

    public void mergeFrom(Input input, ApiResultPacket message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.requestNumber = input.readInt32();
                    break;
                case 2:
                    message.errorCode = input.readInt32();
                    break;
                case 3:
                    message.errorMessage = input.readString();
                    break;
                case 4:
                    message.returnValue = input.readBytes();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, ApiResultPacket message) throws IOException
    {
        if(message.requestNumber == null)
            throw new UninitializedMessageException(message);
        output.writeInt32(1, message.requestNumber, false);

        if(message.errorCode == null)
            throw new UninitializedMessageException(message);
        output.writeInt32(2, message.errorCode, false);

        if(message.errorMessage != null)
            output.writeString(3, message.errorMessage, false);

        if(message.returnValue != null)
            output.writeBytes(4, message.returnValue, false);
    }

    public String getFieldName(int number)
    {
        switch(number)
        {
            case 1: return "requestNumber";
            case 2: return "errorCode";
            case 3: return "errorMessage";
            case 4: return "returnValue";
            default: return null;
        }
    }

    public int getFieldNumber(String name)
    {
        final Integer number = __fieldMap.get(name);
        return number == null ? 0 : number.intValue();
    }

    private static final java.util.HashMap<String,Integer> __fieldMap = new java.util.HashMap<String,Integer>();
    static
    {
        __fieldMap.put("requestNumber", 1);
        __fieldMap.put("errorCode", 2);
        __fieldMap.put("errorMessage", 3);
        __fieldMap.put("returnValue", 4);
    }
    
}
