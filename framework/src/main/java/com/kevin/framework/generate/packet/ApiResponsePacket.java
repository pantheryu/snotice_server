// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from snotice.proto

package com.kevin.framework.generate.packet;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class ApiResponsePacket implements Externalizable, Message<ApiResponsePacket>, Schema<ApiResponsePacket>
{

    public static Schema<ApiResponsePacket> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static ApiResponsePacket getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final ApiResponsePacket DEFAULT_INSTANCE = new ApiResponsePacket();

    
    private List<ApiResultPacket> apiResults;
    private String longTermSessionID;
    private Integer errorCode;
    private String errorMessage;

    public ApiResponsePacket()
    {
        
    }

    // getters and setters

    // apiResults

    public List<ApiResultPacket> getApiResultsList()
    {
        return apiResults;
    }

    public void setApiResultsList(List<ApiResultPacket> apiResults)
    {
        this.apiResults = apiResults;
    }

    // longTermSessionID

    public String getLongTermSessionID()
    {
        return longTermSessionID;
    }

    public void setLongTermSessionID(String longTermSessionID)
    {
        this.longTermSessionID = longTermSessionID;
    }

    // errorCode

    public Integer getErrorCode()
    {
        return errorCode;
    }

    public void setErrorCode(Integer errorCode)
    {
        this.errorCode = errorCode;
    }

    // errorMessage

    public String getErrorMessage()
    {
        return errorMessage;
    }

    public void setErrorMessage(String errorMessage)
    {
        this.errorMessage = errorMessage;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<ApiResponsePacket> cachedSchema()
    {
        return this;
    }

    // schema methods

    public ApiResponsePacket newMessage()
    {
        return new ApiResponsePacket();
    }

    public Class<ApiResponsePacket> typeClass()
    {
        return ApiResponsePacket.class;
    }

    public String messageName()
    {
        return ApiResponsePacket.class.getSimpleName();
    }

    public String messageFullName()
    {
        return ApiResponsePacket.class.getName();
    }

    public boolean isInitialized(ApiResponsePacket message)
    {
        return true;
    }

    public void mergeFrom(Input input, ApiResponsePacket message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    if(message.apiResults == null)
                        message.apiResults = new ArrayList<ApiResultPacket>();
                    message.apiResults.add(input.mergeObject(null, ApiResultPacket.getSchema()));
                    break;

                case 2:
                    message.longTermSessionID = input.readString();
                    break;
                case 3:
                    message.errorCode = input.readInt32();
                    break;
                case 4:
                    message.errorMessage = input.readString();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, ApiResponsePacket message) throws IOException
    {
        if(message.apiResults != null)
        {
            for(ApiResultPacket apiResults : message.apiResults)
            {
                if(apiResults != null)
                    output.writeObject(1, apiResults, ApiResultPacket.getSchema(), true);
            }
        }


        if(message.longTermSessionID != null)
            output.writeString(2, message.longTermSessionID, false);

        if(message.errorCode != null)
            output.writeInt32(3, message.errorCode, false);

        if(message.errorMessage != null)
            output.writeString(4, message.errorMessage, false);
    }

    public String getFieldName(int number)
    {
        switch(number)
        {
            case 1: return "apiResults";
            case 2: return "longTermSessionID";
            case 3: return "errorCode";
            case 4: return "errorMessage";
            default: return null;
        }
    }

    public int getFieldNumber(String name)
    {
        final Integer number = __fieldMap.get(name);
        return number == null ? 0 : number.intValue();
    }

    private static final java.util.HashMap<String,Integer> __fieldMap = new java.util.HashMap<String,Integer>();
    static
    {
        __fieldMap.put("apiResults", 1);
        __fieldMap.put("longTermSessionID", 2);
        __fieldMap.put("errorCode", 3);
        __fieldMap.put("errorMessage", 4);
    }
    
}
