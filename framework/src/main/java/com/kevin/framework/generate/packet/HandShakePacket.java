// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from snotice.proto

package com.kevin.framework.generate.packet;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;

public final class HandShakePacket implements Externalizable, Message<HandShakePacket>, Schema<HandShakePacket>
{

    public static Schema<HandShakePacket> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static HandShakePacket getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final HandShakePacket DEFAULT_INSTANCE = new HandShakePacket();

    
    private String serialNo;
    private String mac;
    private String imei;
    private String imsi;
    private String resolution;
    private String density;
    private Integer screenWidth;
    private Integer screenHeight;

    public HandShakePacket()
    {
        
    }

    // getters and setters

    // serialNo

    public String getSerialNo()
    {
        return serialNo;
    }

    public void setSerialNo(String serialNo)
    {
        this.serialNo = serialNo;
    }

    // mac

    public String getMac()
    {
        return mac;
    }

    public void setMac(String mac)
    {
        this.mac = mac;
    }

    // imei

    public String getImei()
    {
        return imei;
    }

    public void setImei(String imei)
    {
        this.imei = imei;
    }

    // imsi

    public String getImsi()
    {
        return imsi;
    }

    public void setImsi(String imsi)
    {
        this.imsi = imsi;
    }

    // resolution

    public String getResolution()
    {
        return resolution;
    }

    public void setResolution(String resolution)
    {
        this.resolution = resolution;
    }

    // density

    public String getDensity()
    {
        return density;
    }

    public void setDensity(String density)
    {
        this.density = density;
    }

    // screenWidth

    public Integer getScreenWidth()
    {
        return screenWidth;
    }

    public void setScreenWidth(Integer screenWidth)
    {
        this.screenWidth = screenWidth;
    }

    // screenHeight

    public Integer getScreenHeight()
    {
        return screenHeight;
    }

    public void setScreenHeight(Integer screenHeight)
    {
        this.screenHeight = screenHeight;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<HandShakePacket> cachedSchema()
    {
        return this;
    }

    // schema methods

    public HandShakePacket newMessage()
    {
        return new HandShakePacket();
    }

    public Class<HandShakePacket> typeClass()
    {
        return HandShakePacket.class;
    }

    public String messageName()
    {
        return HandShakePacket.class.getSimpleName();
    }

    public String messageFullName()
    {
        return HandShakePacket.class.getName();
    }

    public boolean isInitialized(HandShakePacket message)
    {
        return true;
    }

    public void mergeFrom(Input input, HandShakePacket message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.serialNo = input.readString();
                    break;
                case 2:
                    message.mac = input.readString();
                    break;
                case 3:
                    message.imei = input.readString();
                    break;
                case 4:
                    message.imsi = input.readString();
                    break;
                case 5:
                    message.resolution = input.readString();
                    break;
                case 6:
                    message.density = input.readString();
                    break;
                case 7:
                    message.screenWidth = input.readInt32();
                    break;
                case 8:
                    message.screenHeight = input.readInt32();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, HandShakePacket message) throws IOException
    {
        if(message.serialNo != null)
            output.writeString(1, message.serialNo, false);

        if(message.mac != null)
            output.writeString(2, message.mac, false);

        if(message.imei != null)
            output.writeString(3, message.imei, false);

        if(message.imsi != null)
            output.writeString(4, message.imsi, false);

        if(message.resolution != null)
            output.writeString(5, message.resolution, false);

        if(message.density != null)
            output.writeString(6, message.density, false);

        if(message.screenWidth != null)
            output.writeInt32(7, message.screenWidth, false);

        if(message.screenHeight != null)
            output.writeInt32(8, message.screenHeight, false);
    }

    public String getFieldName(int number)
    {
        switch(number)
        {
            case 1: return "serialNo";
            case 2: return "mac";
            case 3: return "imei";
            case 4: return "imsi";
            case 5: return "resolution";
            case 6: return "density";
            case 7: return "screenWidth";
            case 8: return "screenHeight";
            default: return null;
        }
    }

    public int getFieldNumber(String name)
    {
        final Integer number = __fieldMap.get(name);
        return number == null ? 0 : number.intValue();
    }

    private static final java.util.HashMap<String,Integer> __fieldMap = new java.util.HashMap<String,Integer>();
    static
    {
        __fieldMap.put("serialNo", 1);
        __fieldMap.put("mac", 2);
        __fieldMap.put("imei", 3);
        __fieldMap.put("imsi", 4);
        __fieldMap.put("resolution", 5);
        __fieldMap.put("density", 6);
        __fieldMap.put("screenWidth", 7);
        __fieldMap.put("screenHeight", 8);
    }
    
}
